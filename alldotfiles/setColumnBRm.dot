digraph "void setColumn(int,double[])" {
    label="void setColumn(int,double[])";
    node [shape=box];
    "0" [style=filled,fillcolor=gray,label="r0 := @this",];
    "1" [label="i0 := @parameter0",];
    "0"->"1";
    "2" [label="r1 := @parameter1",];
    "1"->"2";
    "3" [label="org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(r0, i0)",];
    "2"->"3";
    "4" [label="i1 = r0.getRowDimension()",];
    "3"->"4";
    "5" [label="$i9 = lengthof r1",];
    "4"->"5";
    "6" [label="if $i9 == i1 goto label0",];
    "5"->"6";
    "7" [label="r5 = new org.apache.commons.math3.linear.MatrixDimensionMismatchException",];
    "6"->"7";
    "12" [label="label0: i2 = i0 / 52",];
    "6"->"12";
    "8" [label="$i10 = lengthof r1",];
    "7"->"8";
    "9" [label="specialinvoke r5.<init>($i10, 1, i1, 1)",];
    "8"->"9";
    "10" [label="r6 = (java.lang.Throwable) r5",];
    "9"->"10";
    "11" [style=filled,fillcolor=lightgray,label="throw r6",];
    "10"->"11";
    "13" [label="$i11 = i2 * 52",];
    "12"->"13";
    "14" [label="i3 = i0 - $i11",];
    "13"->"14";
    "15" [label="i4 = specialinvoke r0.blockWidth(i2)",];
    "14"->"15";
    "16" [label="i5 = 0",];
    "15"->"16";
    "17" [label="i6 = 0",];
    "16"->"17";
    "18" [label="label1: $i12 = r0.blockRows",];
    "17"->"18";
    "19" [label="if i6 >= $i12 goto label4",];
    "18"->"19";
    "20" [label="i7 = specialinvoke r0.blockHeight(i6)",];
    "19"->"20";
    "38" [style=filled,fillcolor=lightgray,label="label4: return",];
    "19"->"38";
    "21" [label="$r4 = r0.blocks",];
    "20"->"21";
    "22" [label="$i13 = r0.blockColumns",];
    "21"->"22";
    "23" [label="$i14 = i6 * $i13",];
    "22"->"23";
    "24" [label="$i15 = $i14 + i2",];
    "23"->"24";
    "25" [label="r2 = $r4[$i15]",];
    "24"->"25";
    "26" [label="i8 = 0",];
    "25"->"26";
    "27" [label="label2: if i8 >= i7 goto label3",];
    "26"->"27";
    "28" [label="$i16 = i8 * i4",];
    "27"->"28";
    "36" [label="label3: i6 = i6 + 1",];
    "27"->"36";
    "29" [label="$i17 = $i16 + i3",];
    "28"->"29";
    "30" [label="$i18 = i5",];
    "29"->"30";
    "31" [label="i5 = i5 + 1",];
    "30"->"31";
    "32" [label="$d0 = r1[$i18]",];
    "31"->"32";
    "33" [label="r2[$i17] = $d0",];
    "32"->"33";
    "34" [label="i8 = i8 + 1",];
    "33"->"34";
    "35" [label="goto label2",];
    "34"->"35";
    "35"->"27";
    "37" [label="goto label1",];
    "36"->"37";
    "37"->"18";
}
