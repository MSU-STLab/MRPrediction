digraph "void setRow(int,double[])" {
    label="void setRow(int,double[])";
    node [shape=box];
    "0" [style=filled,fillcolor=gray,label="r0 := @this",];
    "1" [label="i0 := @parameter0",];
    "0"->"1";
    "2" [label="r1 := @parameter1",];
    "1"->"2";
    "3" [label="org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(r0, i0)",];
    "2"->"3";
    "4" [label="i1 = r0.getColumnDimension()",];
    "3"->"4";
    "5" [label="$i7 = lengthof r1",];
    "4"->"5";
    "6" [label="if $i7 == i1 goto label0",];
    "5"->"6";
    "7" [label="r5 = new org.apache.commons.math3.linear.MatrixDimensionMismatchException",];
    "6"->"7";
    "12" [label="label0: i2 = i0 / 52",];
    "6"->"12";
    "8" [label="$i8 = lengthof r1",];
    "7"->"8";
    "9" [label="specialinvoke r5.<init>(1, $i8, 1, i1)",];
    "8"->"9";
    "10" [label="r6 = (java.lang.Throwable) r5",];
    "9"->"10";
    "11" [style=filled,fillcolor=lightgray,label="throw r6",];
    "10"->"11";
    "13" [label="$i9 = i2 * 52",];
    "12"->"13";
    "14" [label="i3 = i0 - $i9",];
    "13"->"14";
    "15" [label="i4 = 0",];
    "14"->"15";
    "16" [label="i5 = 0",];
    "15"->"16";
    "17" [label="label1: $i10 = r0.blockColumns",];
    "16"->"17";
    "18" [label="if i5 >= $i10 goto label2",];
    "17"->"18";
    "19" [label="i6 = specialinvoke r0.blockWidth(i5)",];
    "18"->"19";
    "30" [style=filled,fillcolor=lightgray,label="label2: return",];
    "18"->"30";
    "20" [label="$r4 = r0.blocks",];
    "19"->"20";
    "21" [label="$i11 = r0.blockColumns",];
    "20"->"21";
    "22" [label="$i12 = i2 * $i11",];
    "21"->"22";
    "23" [label="$i13 = $i12 + i5",];
    "22"->"23";
    "24" [label="r2 = $r4[$i13]",];
    "23"->"24";
    "25" [label="$i14 = i3 * i6",];
    "24"->"25";
    "26" [label="java.lang.System.arraycopy(r1, i4, r2, $i14, i6)",];
    "25"->"26";
    "27" [label="i4 = i4 + i6",];
    "26"->"27";
    "28" [label="i5 = i5 + 1",];
    "27"->"28";
    "29" [label="goto label1",];
    "28"->"29";
    "29"->"17";
}
