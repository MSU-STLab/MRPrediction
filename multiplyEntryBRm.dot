digraph "void multiplyEntry(int,int,double)" {
    label="void multiplyEntry(int,int,double)";
    node [shape=box];
    "0" [style=filled,fillcolor=gray,label="r0 := @this",];
    "1" [label="i0 := @parameter0",];
    "0"->"1";
    "2" [label="i1 := @parameter1",];
    "1"->"2";
    "3" [label="d0 := @parameter2",];
    "2"->"3";
    "4" [label="org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(r0, i0, i1)",];
    "3"->"4";
    "5" [label="i2 = i0 / 52",];
    "4"->"5";
    "6" [label="i3 = i1 / 52",];
    "5"->"6";
    "7" [label="$i5 = i2 * 52",];
    "6"->"7";
    "8" [label="$i6 = i0 - $i5",];
    "7"->"8";
    "9" [label="$i7 = specialinvoke r0.blockWidth(i3)",];
    "8"->"9";
    "10" [label="$i8 = $i6 * $i7",];
    "9"->"10";
    "11" [label="$i9 = i3 * 52",];
    "10"->"11";
    "12" [label="$i10 = i1 - $i9",];
    "11"->"12";
    "13" [label="i4 = $i8 + $i10",];
    "12"->"13";
    "14" [label="$r1 = r0.blocks",];
    "13"->"14";
    "15" [label="$i11 = r0.blockColumns",];
    "14"->"15";
    "16" [label="$i12 = i2 * $i11",];
    "15"->"16";
    "17" [label="$i13 = $i12 + i3",];
    "16"->"17";
    "18" [label="$r2 = $r1[$i13]",];
    "17"->"18";
    "19" [label="$d1 = $r2[i4]",];
    "18"->"19";
    "20" [label="$d2 = $d1 * d0",];
    "19"->"20";
    "21" [label="$r2[i4] = $d2",];
    "20"->"21";
    "22" [style=filled,fillcolor=lightgray,label="return",];
    "21"->"22";
}
