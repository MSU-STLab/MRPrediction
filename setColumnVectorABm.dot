digraph "void setColumnVector(int,org.apache.commons.math3.linear.RealVector)" {
    label="void setColumnVector(int,org.apache.commons.math3.linear.RealVector)";
    node [shape=box];
    "0" [style=filled,fillcolor=gray,label="r0 := @this",];
    "1" [label="i0 := @parameter0",];
    "0"->"1";
    "2" [label="r1 := @parameter1",];
    "1"->"2";
    "3" [label="org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(r0, i0)",];
    "2"->"3";
    "4" [label="i1 = r0.getRowDimension()",];
    "3"->"4";
    "5" [label="$i3 = r1.getDimension()",];
    "4"->"5";
    "6" [label="if $i3 == i1 goto label0",];
    "5"->"6";
    "7" [label="r3 = new org.apache.commons.math3.linear.MatrixDimensionMismatchException",];
    "6"->"7";
    "12" [label="label0: i2 = 0",];
    "6"->"12";
    "8" [label="$i4 = r1.getDimension()",];
    "7"->"8";
    "9" [label="specialinvoke r3.<init>($i4, 1, i1, 1)",];
    "8"->"9";
    "10" [label="r4 = (java.lang.Throwable) r3",];
    "9"->"10";
    "11" [style=filled,fillcolor=lightgray,label="throw r4",];
    "10"->"11";
    "13" [label="label1: if i2 >= i1 goto label2",];
    "12"->"13";
    "14" [label="$d0 = r1.getEntry(i2)",];
    "13"->"14";
    "18" [style=filled,fillcolor=lightgray,label="label2: return",];
    "13"->"18";
    "15" [label="r0.setEntry(i2, i0, $d0)",];
    "14"->"15";
    "16" [label="i2 = i2 + 1",];
    "15"->"16";
    "17" [label="goto label1",];
    "16"->"17";
    "17"->"13";
}
